from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.filters import Command
from models import User, async_session_maker
from sqlalchemy import select
from aiogram import types

router = Router()

class Form(StatesGroup):
    name = State()
    city = State()
    location = State()
    pace = State()
    time = State()

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await message.answer("–°”ô–ª–µ–º! –ê—Ç—ã“£–¥—ã –µ–Ω–≥—ñ–∑—à—ñ üòä")
    await state.set_state(Form.name)

@router.message(Form.name)
async def process_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("“ö–∞–π “õ–∞–ª–∞–¥–∞–Ω—Å—ã“£?")
    await state.set_state(Form.city)

@router.message(Form.city)
async def process_city(message: Message, state: FSMContext):
    await state.update_data(city=message.text)
    await message.answer("–ù–∞“õ—Ç—ã –ª–æ–∫–∞—Ü–∏—è (–º—ã—Å–∞–ª—ã, –ø–∞—Ä–∫, –∞—É–¥–∞–Ω)?")
    await state.set_state(Form.location)

@router.message(Form.location)
async def process_location(message: Message, state: FSMContext):
    await state.update_data(location=message.text)
    await message.answer("–¢–µ–º–ø “õ–∞–Ω–¥–∞–π? (–∂”ô–π, –æ—Ä—Ç–∞—à–∞, –∂—ã–ª–¥–∞–º)")
    await state.set_state(Form.pace)

@router.message(Form.pace)
async def process_pace(message: Message, state: FSMContext):
    await state.update_data(pace=message.text)
    await message.answer("“ö–∞–π —É–∞“õ—ã—Ç—Ç–∞ —ã“£“ì–∞–π–ª—ã? (—Ç–∞“£–µ—Ä—Ç–µ“£/–∫–µ—à–∫–µ)")
    await state.set_state(Form.time)

@router.message(Form.time)
async def process_time(message: Message, state: FSMContext):
    user_data = await state.get_data()
    await state.clear()

    async with async_session_maker() as session:
        session.add(User(
            telegram_id=message.from_user.id,
            name=user_data["name"],
            city=user_data["city"],
            location=user_data["location"],
            pace=user_data["pace"],
            time=message.text
        ))
        await session.commit()

    await message.answer("–†–∞“õ–º–µ—Ç! –ê–Ω–∫–µ—Ç–∞ —Å–∞“õ—Ç–∞–ª–¥—ã ‚úÖ")
def register_handlers(dp):
    dp.include_router(router)

